version: "3.8"

services:

  user-db:
    image: postgres
    restart: always
    volumes:
      - user-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ft_transcendence
      - POSTGRES_USER=ecole
      - POSTGRES_PASSWORD=super_secret_password
    healthcheck:
      test: "/usr/bin/pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h user-db"
      interval: 5s
      timeout: 10s
      retries: 5

  user-web:
    build: src/user-web
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             gunicorn -b \'0.0.0.0:8002\' --reload ft_transcendence.wsgi --reload-extra-file templates/ --reload-extra-file templates/user/ "
    volumes:
      - type: bind
        source: src/user-web/ft_transcendence
        target: /code
    expose:
      - "8000"
    depends_on:
      user-db:
        condition: service_healthy
        restart: true
    environment:
      - POSTGRES_DB=ft_transcendence
      - POSTGRES_USER=ecole
      - POSTGRES_PASSWORD=super_secret_password

  user-nginx:
    image: nginx
    restart: always
    volumes:
      - type: bind
        source: src/user-web/nginx.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: src/user-web/ft_transcendence/staticfiles
        target: /data/static
      - type: bind
        source: src/user-web/ft_transcendence/media
        target: /data/media
    expose:
      - "8001"
    depends_on:
      - user-web

  master-nginx:
    image: nginx
    restart: always
    volumes:
      - type: bind
        source: src/nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
    ports:
      - "3600:8000"
    depends_on:
      - user-nginx

volumes:
  user-postgres:
